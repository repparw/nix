networks:
    default:
        name: dlsuite


x-environment: &default-tz-puid-pgid
  TZ: America/Argentina/Buenos_Aires
  PUID: 1001
  PGID: 131

services:
  ## remove after proy
    grupo10:
        image: 'docker.io/library/postgres:15'
        container_name: grupo10
        environment:
            POSTGRES_DB: grupo10
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - '5432:5432'
        volumes:
            - '/home/docker/grupo10:/var/lib/postgresql/data:Z'
        restart: unless-stopped
    pgadmin:
        image: 'dpage/pgadmin4:latest'
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - '5050:5050'
        depends_on:
            - grupo10
        restart: unless-stopped

  ## remove after proy
    prowlarr:
        image: 'linuxserver/prowlarr:latest'
        container_name: prowlarr
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/prowlarr:/config:Z'
        ports:
            - '9696:9696'
        restart: unless-stopped
    flaresolverr:
        image: 'flaresolverr/flaresolverr:latest'
        container_name: flaresolverr
        environment:
            - LOG_LEVEL=${LOG_LEVEL:-info}
            - LOG_HTML=${LOG_HTML:-false}
            - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
            - TZ=America/Argentina/Buenos_Aires
        ports:
            - '8191:8191'
        restart: unless-stopped
    qbittorrent:
        image: 'hotio/qbittorrent:latest'
        container_name: qbitttorrent
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/qbittorrent:/config:Z'
            - '/home/docker/data/torrents:/data/torrents:z'
        ports:
            - '54536:54536'
            - '8080:8080'
        restart: unless-stopped
    sonarr:
        image: 'linuxserver/sonarr:latest'
        container_name: sonarr
        environment: *default-tz-puid-pgid
        volumes:
            - '/dev/rtc:/dev/rtc:ro'
            - '/home/docker/sonarr:/config:Z'
            - '/home/docker/data:/data:z'
        ports:
            - '8989:8989'
        links:
            - qbittorrent
        restart: unless-stopped
    radarr:
        image: 'linuxserver/radarr:latest'
        container_name: radarr
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/radarr:/config:Z'
            - '/home/docker/data/:/data:z'
        ports:
            - '7878:7878'
        links:
            - qbittorrent
        restart: unless-stopped
    bazarr:
        image: 'linuxserver/bazarr:latest'
        container_name: bazarr
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/bazarr:/config:Z'
            - '/home/docker/data:/data:z'
        ports:
            - '6767:6767'
        restart: unless-stopped
    jellyfin:
        image: 'linuxserver/jellyfin:latest'
        container_name: jellyfin
        environment:
            - PUID=974
            - PGID=971
            - TZ=America/Argentina/Buenos_Aires
            - JELLYFIN_PublishedServerUrl=jellyfin.repparw.com.ar
            - DOCKER_MODS=linuxserver/mods:jellyfin-amd
        devices:
            - '/dev/dri:/dev/dri'
        volumes:
            - '/home/docker/jellyfin:/config:Z'
            - '/home/docker/data/media:/data/media:ro'
        ports:
            - '8096:8096'
            - '8920:8920' #optional
            - '7359:7359/udp' #optional
        restart: 'unless-stopped'
    freshrss:
        image: 'linuxserver/freshrss:latest'
        container_name: freshrss
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/freshrss:/config:Z'
        ports:
            - '81:80'
        restart: unless-stopped
    mercury:
        image: 'wangqiru/mercury-parser-api:latest'
        container_name: mercury
        ports:
            - '3000:3000'
        restart: unless-stopped
    grocy:
        image: 'linuxserver/grocy:latest'
        container_name: grocy
        environment: *default-tz-puid-pgid
        volumes:
            - '/home/docker/grocy:/config:Z'
        ports:
            - '9283:80'
        restart: unless-stopped
    swag:
        image: 'linuxserver/swag:latest'
        container_name: swag
        cap_add:
            - NET_ADMIN
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            - DOCKER_MODS=linuxserver/mods:universal-cron
            - TZ=America/Argentina/Buenos_Aires
            - PUID=1001
            - PGID=131
            - URL=repparw.com.ar
            - SUBDOMAINS=wildcard
            - VALIDATION=dns
            - DNSPLUGIN=cloudflare 
        volumes:
            - '/home/docker/swag:/config:Z'
        ports:
            - '443:443'
            - '80:80'
        restart: unless-stopped
    authelia:
        image: 'authelia/authelia:latest'
        container_name: authelia
        environment:
            - TZ=America/Argentina/Buenos_Aires
            - PUID=1001
            - PGID=131
            - AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE=/secrets/JWT_SECRET
            - AUTHELIA_SESSION_SECRET_FILE=/secrets/SESSION_SECRET
#           - AUTHELIA_STORAGE_PASSWORD_FILE=/secrets/STORAGE_PASSWORD Storage password for Postgresql
            - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/secrets/STORAGE_ENCRYPTION_KEY
        volumes:
            - '/home/docker/authelia/config:/config:Z'
            - '/home/docker/authelia/secrets:/secrets:Z'
        ports:
            - '9091:9091'
        depends_on:
            - valkey
        restart: unless-stopped
    valkey:
        image: 'valkey/valkey:7.2-alpine'
        container_name: valkey
        command: valkey-server --save 60 1 --loglevel warning
        environment: *default-tz-puid-pgid
        volumes: 
            - '/home/docker/authelia/valkey:/data:Z'
        ports:
            - '6379:6379'
        restart: unless-stopped
### Paperless
    broker:
        image: 'docker.io/library/redis:7'
        container_name: broker
        volumes:
            - '/home/docker/paper/redis:/data:Z'
        restart: unless-stopped
    db:
        image: 'docker.io/library/postgres:15'
        container_name: db
        environment:
            POSTGRES_DB: paperless
            POSTGRES_USER: paperless
            POSTGRES_PASSWORD: paperless
        volumes:
            - '/home/docker/paper/pg:/var/lib/postgresql/data:Z'
        restart: unless-stopped

    paperless:
        image: 'ghcr.io/paperless-ngx/paperless-ngx:latest'
        container_name: paperless
        depends_on:
            - db
            - broker
        ports:
            - '8000:8000'
        volumes:
            - '/home/docker/paper/data:/usr/src/paperless/data:Z'
            - '/home/docker/paper/media:/usr/src/paperless/media:Z'
            - '/home/docker/paper/export:/usr/src/paperless/export:Z'
            - '/home/repparw/Documents/consume:/usr/src/paperless/consume:Z'
        environment:
            - PAPERLESS_REDIS=redis://broker:6379
            - PAPERLESS_DBHOST=db
            - USERMAP_UID=1001
            - USERMAP_GID=131
            - PAPERLESS_OCR_LANGUAGE=spa
            - PAPERLESS_DISABLE_REGULAR_LOGIN=1
            - PAPERLESS_URL=https://paper.repparw.com.ar
            - PAPERLESS_TIME_ZONE=America/Argentina/Buenos_Aires
        restart: unless-stopped
### Paperless

### change-detection.io

    playwright:
        container_name: playwright
        image: 'browserless/chrome:1.60-chrome-stable'
        restart: unless-stopped
        environment:
          - SCREEN_WIDTH=1920
          - SCREEN_HEIGHT=1024
          - SCREEN_DEPTH=16
          - ENABLE_DEBUGGER=false
          - PREBOOT_CHROME=true
          - CONNECTION_TIMEOUT=300000
          - MAX_CONCURRENT_SESSIONS=10
          - CHROME_REFRESH_TIME=600000
          - DEFAULT_BLOCK_ADS=true
          - DEFAULT_STEALTH=true
          - DEFAULT_IGNORE_HTTPS_ERRORS=true
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:3000"]
          interval: 30s
          timeout: 10s
          retries: 5
          start_period: 10s

    changedetection:
        image: 'dgtlmoon/changedetection.io'
        container_name: changedetection
        volumes:
          - '/var/lib/changedetection-io:/datastore:Z'
        environment:
          - PORT=5000
          - PUID=1001
          - PGID=131
          - WEBDRIVER_URL=http://playwright:3000/wd/hub
          - PLAYWRIGHT_DRIVER_URL=ws://playwright:3000
          - BASE_URL=https://repparw.com.ar
          - HIDE_REFERER=true
        ports:
          - "5000:5000"
        restart: unless-stopped
        depends_on:
          - playwright
